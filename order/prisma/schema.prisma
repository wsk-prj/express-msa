// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum OrderGroupStatus {
  OPEN
  CLOSED
  DELIVERING
  COMPLETED
}

model OrderGroup {
  id             Int              @id @default(autoincrement())
  status         OrderGroupStatus @default(OPEN)
  minMembers     Int              @default(1)
  maxMembers     Int              @default(5)
  currentMembers Int              @default(0)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  storeId        Int

  orders Order[]
}

enum OrderStatus {
  PENDING
  CONFIRMED
  DELIVERING
  COMPLETED
  CANCELLED
}

model Order {
  id           Int         @id @default(autoincrement())
  status       OrderStatus @default(PENDING)
  totalPrice   Int
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  orderGroupId Int
  userId       Int

  orderGroup OrderGroup  @relation(fields: [orderGroupId], references: [id], onDelete: Cascade)
  items      OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  menuName  String
  price     Int
  quantity  Int
  createdAt DateTime @default(now())
  menuId    Int
  orderId   Int

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
